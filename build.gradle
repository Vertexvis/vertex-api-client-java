plugins {
    id "idea"
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
    id "java-library"
    id "maven-publish"
    id "signing"
}

group = 'com.vertexvis'
version = '0.1.2'

repositories {
    mavenCentral()
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'api-client-java'
            from components.java
            pom {
                name = 'com.vertexvix:api-client-java'
                description = 'The Vertex REST API client for Java.'
                url = 'https://github.com/Vertexvis/vertex-api-client-java'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://github.com/Vertexvis/vertex-api-client-java/blob/main/LICENSE'
                    }
                }
                developers {
                    developer {
                        email = 'support@vertexvis.com'
                        name = 'Vertex Developers'
                        organizationUrl = 'https://developer.vertexvis.com/'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:vertexvis/vertex-api-client-java.git'
                    developerConnection = 'scm:git:git@github.com:vertexvis/vertex-api-client-java.git'
                    url = 'https://github.com/Vertexvis/vertex-api-client-java'
                }
            }
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}

def base64Decode(prop) {
    return new String(Base64.getDecoder().decode(project.findProperty(prop).toString())).trim()
}

signing {
    useInMemoryPgpKeys(base64Decode("signingKey"), base64Decode("signingPassword"))
    sign publishing.publications.mavenJava
}

javadoc {
    options.tags = ["http.response.details:a:Http Response Details"]
}

dependencies {
    implementation 'io.swagger:swagger-annotations:1.6.2'
    implementation "com.google.code.findbugs:jsr305:3.0.2"
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'io.gsonfire:gson-fire:1.8.5'
    implementation 'org.apache.oltu.oauth2:org.apache.oltu.oauth2.client:1.0.1'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    testImplementation(platform('org.junit:junit-bom:5.7.1'))
    testImplementation('org.junit.jupiter:junit-jupiter')
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
