apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'java'

group = 'com.vertexvis'
archivesBaseName = 'api-client-java'
version = '0.1.0'

buildscript {
  repositories {
    maven { url "https://repo1.maven.org/maven2" }
    jcenter()
  }
}

repositories {
  jcenter()
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

sourceSets {
  main.java.srcDirs = ['src/main/java']
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

install {
  repositories.mavenInstaller {
    pom.artifactId = 'api-client-java'
  }
}

artifacts {
  archives javadocJar, sourcesJar
}

signing {
  sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
      repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }
      snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }
      pom.project {
        name 'api-client-java'
        artifactId 'api-client-java'
        packaging 'jar'
        description 'The Vertex REST API client for Java.'
        url 'https://github.com/Vertexvis/vertex-api-client-java'
        scm {
          connection 'scm:git:git@github.com:vertexvis/vertex-api-client-java.git'
          developerConnection 'scm:git:git@github.com:vertexvis/vertex-api-client-java.git'
          url 'https://github.com/Vertexvis/vertex-api-client-java'
        }
        licenses {
          license {
            name 'MIT'
            url 'https://github.com/Vertexvis/vertex-api-client-java/blob/main/LICENSE'
          }
        }
        developers {
          developer {
            email 'support@vertexvis.com'
            name 'Vertex Developers'
            organization 'Vertex Software'
            organizationUrl 'https://vertexvis.com'
          }
        }
      }
    }
  }
}

dependencies {
  implementation 'io.swagger:swagger-annotations:1.5.24'
  implementation "com.google.code.findbugs:jsr305:3.0.2"
  implementation 'com.squareup.okhttp3:okhttp:4.9.1'
  implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'
  implementation 'com.google.code.gson:gson:2.8.6'
  implementation 'io.gsonfire:gson-fire:1.8.4'
  implementation group: 'org.apache.oltu.oauth2', name: 'org.apache.oltu.oauth2.client', version: '1.0.1'
  implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'
  implementation 'javax.annotation:javax.annotation-api:1.3.2'
  testImplementation 'junit:junit:4.13.1'
}

javadoc {
  options.tags = [ "http.response.details:a:Http Response Details" ]
}

task execute(type:JavaExec) {
  main = System.getProperty('mainClass')
  classpath = sourceSets.main.runtimeClasspath
}

task javadocJar(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}
