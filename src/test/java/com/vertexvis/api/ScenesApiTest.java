/*
 * Vertex Platform API
 * The Vertex distributed cloud rendering platform includes a set of APIs and SDKs, which together allow easily integrating 3D product data into your business application.  See our [Developer Guides](https://developer.vertexvis.com/docs/guides/render-your-first-scene) to get started.  Notes about the Postman collection and API Reference code samples,   - They include all required and optional body parameters for completeness. Remove any optional parameters as desired.   - They use auto-generated IDs and other values that may share the same value for ease of documentation only. In actual requests and responses, the IDs should uniquely identify their corresponding resource. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@vertexvis.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.vertexvis.api;

import com.vertexvis.ApiException;
import com.vertexvis.model.CreateSceneRequest;
import com.vertexvis.model.Failure;
import java.io.File;
import com.vertexvis.model.QueuedJob;
import com.vertexvis.model.Scene;
import com.vertexvis.model.SceneList;
import java.util.UUID;
import com.vertexvis.model.UpdateSceneRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ScenesApi
 */
@Ignore
public class ScenesApiTest {

    private final ScenesApi api = new ScenesApi();

    
    /**
     * 
     *
     * Create a &#x60;scene&#x60;. Once created, add scene items via the createSceneItem API. For details, see our [Render static scenes](https://developer.vertexvis.com/docs/guides/render-static-scenes) guide.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSceneTest() throws ApiException {
        CreateSceneRequest createSceneRequest = null;
        Scene response = api.createScene(createSceneRequest);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Delete a &#x60;scene&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSceneTest() throws ApiException {
        UUID id = null;
        api.deleteScene(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get a &#x60;queued-scene&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getQueuedSceneTest() throws ApiException {
        UUID id = null;
        QueuedJob response = api.getQueuedScene(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get a &#x60;scene&#x60; by ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSceneTest() throws ApiException {
        UUID id = null;
        Scene response = api.getScene(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get &#x60;scenes&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getScenesTest() throws ApiException {
        String pageCursor = null;
        Integer pageSize = null;
        SceneList response = api.getScenes(pageCursor, pageSize);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get a rendered image of a &#x60;scene&#x60;. If only a single pixel is returned, ensure the &#x60;scene&#x60; is in the &#x60;commit&#x60; state and contains scene items.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void renderSceneTest() throws ApiException {
        UUID id = null;
        Integer height = null;
        Integer width = null;
        File response = api.renderScene(id, height, width);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Update a &#x60;scene&#x60; camera and/or state. Once updated, view the scene via the renderScene API or with the Viewer SDK. For details, see our [Render static scenes](https://developer.vertexvis.com/docs/guides/render-static-scenes) guide.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSceneTest() throws ApiException {
        UUID id = null;
        UpdateSceneRequest updateSceneRequest = null;
        Scene response = api.updateScene(id, updateSceneRequest);

        // TODO: test validations
    }
    
}
