/*
 * Vertex Platform API
 * The Vertex distributed cloud rendering platform includes a set of APIs and SDKs, which together allow easily integrating 3D product data into your business application.  See our [Developer Guides](https://developer.vertexvis.com/docs/guides/render-your-first-scene) to get started.  Notes about the Postman collection and API Reference code samples,   - They include all required and optional body parameters for completeness. Remove any optional parameters as desired.   - They use auto-generated IDs and other values that may share the same value for ease of documentation only. In actual requests and responses, the IDs should uniquely identify their corresponding resource. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@vertexvis.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.vertexvis.api;

import com.vertexvis.ApiException;
import com.vertexvis.model.CreateSceneItemRequest;
import com.vertexvis.model.Failure;
import com.vertexvis.model.QueuedJob;
import com.vertexvis.model.SceneItem;
import com.vertexvis.model.SceneItemList;
import java.util.UUID;
import com.vertexvis.model.UpdateSceneItemRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SceneItemsApi
 */
@Ignore
public class SceneItemsApiTest {

    private final SceneItemsApi api = new SceneItemsApi();

    
    /**
     * 
     *
     * Create a &#x60;scene-item&#x60; for a &#x60;scene&#x60;. Provide the source geometry either via &#x60;part-revision&#x60; or &#x60;geometry-set&#x60; UUID using &#x60;relationship.source&#x60; or by supplied IDs using &#x60;attributes.source&#x60;. Provide an existing &#x60;scene&#x60; using &#x60;relationship.source&#x60; to clone it. Provide the hierarchical parent either via &#x60;scene-item&#x60; UUID using &#x60;relationship.source&#x60; or by supplied ID using &#x60;attributes.parent&#x60;. To reduce the time taken creating many hierarchical &#x60;scene-items&#x60;, make a best effort to create parents before children. One way to do this is by sorting the items by depth and starting at the root. This API is asynchronous, returning the location of a &#x60;queued-scene-item&#x60;. Check the status via the getQueuedSceneItem API. For details, see our [Render static scenes](https://developer.vertexvis.com/docs/guides/render-static-scenes) guide.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSceneItemTest() throws ApiException {
        UUID id = null;
        CreateSceneItemRequest createSceneItemRequest = null;
        QueuedJob response = api.createSceneItem(id, createSceneItemRequest);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Delete a &#x60;scene-item&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSceneItemTest() throws ApiException {
        UUID id = null;
        api.deleteSceneItem(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get a &#x60;queued-scene-item&#x60;. The response is either the status if &#x60;running&#x60; or &#x60;error&#x60; or, upon completion, redirects to the created &#x60;scene-item&#x60;. Once created, commit the scene via the updateScene API. For details, see our [Render static scenes](https://developer.vertexvis.com/docs/guides/render-static-scenes) guide.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getQueuedSceneItemTest() throws ApiException {
        UUID id = null;
        QueuedJob response = api.getQueuedSceneItem(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get a &#x60;queued-scene-item-deletion&#x60; by ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getQueuedSceneItemDeletionTest() throws ApiException {
        UUID id = null;
        QueuedJob response = api.getQueuedSceneItemDeletion(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get a &#x60;scene-item&#x60; by ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSceneItemTest() throws ApiException {
        UUID id = null;
        String fieldsSceneItem = null;
        SceneItem response = api.getSceneItem(id, fieldsSceneItem);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get &#x60;scene-items&#x60; for a &#x60;scene&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSceneItemsTest() throws ApiException {
        UUID id = null;
        String pageCursor = null;
        Integer pageSize = null;
        String filterSource = null;
        String filterSuppliedId = null;
        UUID filterParent = null;
        SceneItemList response = api.getSceneItems(id, pageCursor, pageSize, filterSource, filterSuppliedId, filterParent);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Update a &#x60;scene-item&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSceneItemTest() throws ApiException {
        UUID id = null;
        UpdateSceneItemRequest updateSceneItemRequest = null;
        QueuedJob response = api.updateSceneItem(id, updateSceneItemRequest);

        // TODO: test validations
    }
    
}
