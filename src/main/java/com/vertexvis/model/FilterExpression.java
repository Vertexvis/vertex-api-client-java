/*
 * Vertex Platform API
 * The Vertex distributed cloud rendering platform includes a set of APIs and SDKs, which together allow easily integrating 3D product data into your business application.  See our [Developer Guides](https://developer.vertexvis.com/docs/guides/render-your-first-scene) to get started.  Notes about the Postman collection and API Reference code samples:   - They include all required and optional body parameters for completeness. Remove any optional parameters as desired.   - They use auto-generated IDs and other values that may share the same value for ease of documentation only. In actual requests and responses, the IDs should uniquely identify their corresponding resource. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@vertexvis.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.vertexvis.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Describes how an attribute should be filtered.
 */
@ApiModel(description = "Describes how an attribute should be filtered.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FilterExpression {
  public static final String SERIALIZED_NAME_EQ = "eq";
  @SerializedName(SERIALIZED_NAME_EQ)
  private String eq;

  public static final String SERIALIZED_NAME_NEQ = "neq";
  @SerializedName(SERIALIZED_NAME_NEQ)
  private String neq;

  public static final String SERIALIZED_NAME_GT = "gt";
  @SerializedName(SERIALIZED_NAME_GT)
  private String gt;

  public static final String SERIALIZED_NAME_GTE = "gte";
  @SerializedName(SERIALIZED_NAME_GTE)
  private String gte;

  public static final String SERIALIZED_NAME_LT = "lt";
  @SerializedName(SERIALIZED_NAME_LT)
  private String lt;

  public static final String SERIALIZED_NAME_LTE = "lte";
  @SerializedName(SERIALIZED_NAME_LTE)
  private String lte;

  public static final String SERIALIZED_NAME_CONTAINS = "contains";
  @SerializedName(SERIALIZED_NAME_CONTAINS)
  private String contains;

  public FilterExpression() { 
  }

  public FilterExpression eq(String eq) {
    
    this.eq = eq;
    return this;
  }

   /**
   * A value of a filter.
   * @return eq
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A value of a filter.")

  public String getEq() {
    return eq;
  }


  public void setEq(String eq) {
    this.eq = eq;
  }


  public FilterExpression neq(String neq) {
    
    this.neq = neq;
    return this;
  }

   /**
   * A value of a filter.
   * @return neq
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A value of a filter.")

  public String getNeq() {
    return neq;
  }


  public void setNeq(String neq) {
    this.neq = neq;
  }


  public FilterExpression gt(String gt) {
    
    this.gt = gt;
    return this;
  }

   /**
   * A value of a filter.
   * @return gt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A value of a filter.")

  public String getGt() {
    return gt;
  }


  public void setGt(String gt) {
    this.gt = gt;
  }


  public FilterExpression gte(String gte) {
    
    this.gte = gte;
    return this;
  }

   /**
   * A value of a filter.
   * @return gte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A value of a filter.")

  public String getGte() {
    return gte;
  }


  public void setGte(String gte) {
    this.gte = gte;
  }


  public FilterExpression lt(String lt) {
    
    this.lt = lt;
    return this;
  }

   /**
   * A value of a filter.
   * @return lt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A value of a filter.")

  public String getLt() {
    return lt;
  }


  public void setLt(String lt) {
    this.lt = lt;
  }


  public FilterExpression lte(String lte) {
    
    this.lte = lte;
    return this;
  }

   /**
   * A value of a filter.
   * @return lte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A value of a filter.")

  public String getLte() {
    return lte;
  }


  public void setLte(String lte) {
    this.lte = lte;
  }


  public FilterExpression contains(String contains) {
    
    this.contains = contains;
    return this;
  }

   /**
   * A value of a filter.
   * @return contains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A value of a filter.")

  public String getContains() {
    return contains;
  }


  public void setContains(String contains) {
    this.contains = contains;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterExpression filterExpression = (FilterExpression) o;
    return Objects.equals(this.eq, filterExpression.eq) &&
        Objects.equals(this.neq, filterExpression.neq) &&
        Objects.equals(this.gt, filterExpression.gt) &&
        Objects.equals(this.gte, filterExpression.gte) &&
        Objects.equals(this.lt, filterExpression.lt) &&
        Objects.equals(this.lte, filterExpression.lte) &&
        Objects.equals(this.contains, filterExpression.contains);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eq, neq, gt, gte, lt, lte, contains);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterExpression {\n");
    sb.append("    eq: ").append(toIndentedString(eq)).append("\n");
    sb.append("    neq: ").append(toIndentedString(neq)).append("\n");
    sb.append("    gt: ").append(toIndentedString(gt)).append("\n");
    sb.append("    gte: ").append(toIndentedString(gte)).append("\n");
    sb.append("    lt: ").append(toIndentedString(lt)).append("\n");
    sb.append("    lte: ").append(toIndentedString(lte)).append("\n");
    sb.append("    contains: ").append(toIndentedString(contains)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

