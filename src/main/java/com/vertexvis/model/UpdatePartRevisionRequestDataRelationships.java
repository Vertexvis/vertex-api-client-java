/*
 * Vertex Platform API
 * The Vertex distributed cloud rendering platform includes a set of APIs and SDKs, which together allow easily integrating 3D product data into your business application.  See our [Developer Guides](https://developer.vertexvis.com/docs/guides/render-your-first-scene) to get started.  Notes about the Postman collection and API Reference code samples:   - They include all required and optional body parameters for completeness. Remove any optional parameters as desired.   - They use auto-generated IDs and other values that may share the same value for ease of documentation only. In actual requests and responses, the IDs should uniquely identify their corresponding resource. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@vertexvis.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.vertexvis.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.vertexvis.model.FileRelationship;
import com.vertexvis.model.PartRenditionRelationship;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.vertexvis.JSON;

/**
 * UpdatePartRevisionRequestDataRelationships
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0")
public class UpdatePartRevisionRequestDataRelationships {
  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  @javax.annotation.Nullable
  private FileRelationship source;

  public static final String SERIALIZED_NAME_DEFAULT_PART_RENDITION = "defaultPartRendition";
  @SerializedName(SERIALIZED_NAME_DEFAULT_PART_RENDITION)
  @javax.annotation.Nullable
  private PartRenditionRelationship defaultPartRendition;

  public UpdatePartRevisionRequestDataRelationships() {
  }

  public UpdatePartRevisionRequestDataRelationships source(@javax.annotation.Nullable FileRelationship source) {
    this.source = source;
    return this;
  }

  /**
   * Get source
   * @return source
   */
  @javax.annotation.Nullable
  public FileRelationship getSource() {
    return source;
  }

  public void setSource(@javax.annotation.Nullable FileRelationship source) {
    this.source = source;
  }


  public UpdatePartRevisionRequestDataRelationships defaultPartRendition(@javax.annotation.Nullable PartRenditionRelationship defaultPartRendition) {
    this.defaultPartRendition = defaultPartRendition;
    return this;
  }

  /**
   * Get defaultPartRendition
   * @return defaultPartRendition
   */
  @javax.annotation.Nullable
  public PartRenditionRelationship getDefaultPartRendition() {
    return defaultPartRendition;
  }

  public void setDefaultPartRendition(@javax.annotation.Nullable PartRenditionRelationship defaultPartRendition) {
    this.defaultPartRendition = defaultPartRendition;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdatePartRevisionRequestDataRelationships updatePartRevisionRequestDataRelationships = (UpdatePartRevisionRequestDataRelationships) o;
    return Objects.equals(this.source, updatePartRevisionRequestDataRelationships.source) &&
        Objects.equals(this.defaultPartRendition, updatePartRevisionRequestDataRelationships.defaultPartRendition);
  }

  @Override
  public int hashCode() {
    return Objects.hash(source, defaultPartRendition);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdatePartRevisionRequestDataRelationships {\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    defaultPartRendition: ").append(toIndentedString(defaultPartRendition)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("source");
    openapiFields.add("defaultPartRendition");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdatePartRevisionRequestDataRelationships
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdatePartRevisionRequestDataRelationships.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdatePartRevisionRequestDataRelationships is not found in the empty JSON string", UpdatePartRevisionRequestDataRelationships.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdatePartRevisionRequestDataRelationships.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdatePartRevisionRequestDataRelationships` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `source`
      if (jsonObj.get("source") != null && !jsonObj.get("source").isJsonNull()) {
        FileRelationship.validateJsonElement(jsonObj.get("source"));
      }
      // validate the optional field `defaultPartRendition`
      if (jsonObj.get("defaultPartRendition") != null && !jsonObj.get("defaultPartRendition").isJsonNull()) {
        PartRenditionRelationship.validateJsonElement(jsonObj.get("defaultPartRendition"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdatePartRevisionRequestDataRelationships.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdatePartRevisionRequestDataRelationships' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdatePartRevisionRequestDataRelationships> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdatePartRevisionRequestDataRelationships.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdatePartRevisionRequestDataRelationships>() {
           @Override
           public void write(JsonWriter out, UpdatePartRevisionRequestDataRelationships value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdatePartRevisionRequestDataRelationships read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdatePartRevisionRequestDataRelationships given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdatePartRevisionRequestDataRelationships
   * @throws IOException if the JSON string is invalid with respect to UpdatePartRevisionRequestDataRelationships
   */
  public static UpdatePartRevisionRequestDataRelationships fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdatePartRevisionRequestDataRelationships.class);
  }

  /**
   * Convert an instance of UpdatePartRevisionRequestDataRelationships to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

