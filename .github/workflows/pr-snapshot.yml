name: PR Snapshot

on:
  push:
    branches-ignore:
      - main

jobs:
  build-and-publish-snapshot:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
      
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      
      - name: Build and Publish Snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
           # Sonatype credentials
          OSSRH_USERNAME: ${{ secrets.MAVEN_CENTRAL_CREDS_TOKEN_USER }}
          OSSRH_PASSWORD: ${{ secrets.MAVEN_CENTRAL_CREDS_TOKEN_PASS }}
          # Optional signing environment variables for consistency with publish workflow
          SIGNING_KEY: ${{ secrets.ORG_GRADLE_PROJECT_signingKey || '' }}
          SIGNING_PASSWORD: ${{ secrets.ORG_GRADLE_PROJECT_signingPassword || '' }}
        run: |
          # Build the plugin first
          ./gradlew :openapi-generator-plugin:build
          
          # Publish the plugin to Maven Local so api-client-library can use it
          ./gradlew :openapi-generator-plugin:publishToMavenLocal
          
          # Set up parameters based on available secrets
          GRADLE_PARAMS="-PisSnapshot=true"
          if [ -n "$SIGNING_KEY" ] && [ -n "$SIGNING_PASSWORD" ]; then
            GRADLE_PARAMS="$GRADLE_PARAMS -P signingKey=$SIGNING_KEY -P signingPassword=$SIGNING_PASSWORD"
          fi
          
          # Publish snapshots to GitHub Packages
          ./gradlew -PisSnapshot=true \
            -P ossrhUsername=${{ secrets.MAVEN_CENTRAL_CREDS_TOKEN_USER }} \
            -P ossrhPassword=${{ secrets.MAVEN_CENTRAL_CREDS_TOKEN_PASS }} \
            $GRADLE_PARAMS :api-client-library:publish
